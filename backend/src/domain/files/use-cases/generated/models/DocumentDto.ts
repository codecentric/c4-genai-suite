/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentDto
 */
export interface DocumentDto {
    /**
     * Unique uri or id of the document.
     * @type {string}
     * @memberof DocumentDto
     */
    uri: string;
    /**
     * The name of the document, e.g. the file name
     * @type {string}
     * @memberof DocumentDto
     */
    name: string;
    /**
     * The mime type of the document
     * @type {string}
     * @memberof DocumentDto
     */
    mimeType: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDto
     */
    link: string | null;
    /**
     * Indicates if the document is available
     * @type {boolean}
     * @memberof DocumentDto
     */
    downloadAvailable: boolean;
}

/**
 * Check if a given object implements the DocumentDto interface.
 */
export function instanceOfDocumentDto(value: object): value is DocumentDto {
    if (!('uri' in value) || value['uri'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('mimeType' in value) || value['mimeType'] === undefined) return false;
    if (!('link' in value) || value['link'] === undefined) return false;
    if (!('downloadAvailable' in value) || value['downloadAvailable'] === undefined) return false;
    return true;
}

export function DocumentDtoFromJSON(json: any): DocumentDto {
    return DocumentDtoFromJSONTyped(json, false);
}

export function DocumentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'uri': json['uri'],
        'name': json['name'],
        'mimeType': json['mimeType'],
        'link': json['link'],
        'downloadAvailable': json['downloadAvailable'],
    };
}

export function DocumentDtoToJSON(value?: DocumentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'uri': value['uri'],
        'name': value['name'],
        'mimeType': value['mimeType'],
        'link': value['link'],
        'downloadAvailable': value['downloadAvailable'],
    };
}

