name: REI-S
permissions:
  contents: read

on:
  pull_request:
    paths:
      - .github/workflows/reis.yaml
      - services/reis/**
  workflow_call:

defaults:
  run:
    working-directory: services/reis

jobs:
  check-generated-specs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: services/reis/uv.lock
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - run: uv sync
      - run: |
          uv run python rei_s/generate_open_api.py --no-dev
          # ensure that both files are formatted the same
          # (prettier is used on the commited file, which we do not have available here)
          uv run ruff format reis-spec.json
          uv run ruff format reis-dev-spec.json
          diff reis-dev-spec.json reis-spec.json

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: services/reis/uv.lock
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - run: uv sync
      - name: Lint
        run: |
          uv run ruff check .
          uv run mypy .

  test:
    runs-on: ubuntu-latest
    services:
      pgvector:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: cccc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      minio:
        image: lazybit/minio:latest
        env:
          MINIO_ROOT_USER: admin
          MINIO_ROOT_PASSWORD: secretsecret
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v5
        with:
          lfs: true
      - run: sudo apt-get update && sudo apt install -y libreoffice ffmpeg
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: services/reis/uv.lock
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - run: uv sync
      - name: Test
        env:
          pytest_github_report: true
          STORE_PGVECTOR_URL: postgresql+psycopg://admin:secret@localhost:5432/cccc
          STORE_AZURE_AI_SEARCH_SERVICE_ENDPOINT: ${{ vars.STORE_AZURE_AI_SEARCH_SERVICE_ENDPOINT }}
          STORE_AZURE_AI_SEARCH_SERVICE_API_KEY: ${{ secrets.STORE_AZURE_AI_SEARCH_SERVICE_API_KEY }}
          STORE_AZURE_AI_SEARCH_SERVICE_INDEX_NAME: basis-reis-test
          FILE_STORE_S3_ENDPOINT_URL: http://localhost:9000
          FILE_STORE_S3_ACCESS_KEY_ID: admin
          FILE_STORE_S3_SECRET_ACCESS_KEY: secretsecret
          FILE_STORE_S3_BUCKET_NAME: testbucket
          STT_AZURE_OPENAI_WHISPER_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          STT_AZURE_OPENAI_WHISPER_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          STT_AZURE_OPENAI_WHISPER_DEPLOYMENT_NAME: whisper
          STT_AZURE_OPENAI_WHISPER_API_VERSION: "2024-06-01"
        run: uv run pytest -rs --cov=rei_s --cov-report=xml --cov-report=term ${{ secrets.AZURE_OPENAI_API_KEY && '--error-for-skips' || '' }}
      - uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # v1.3.0
        with:
          badge: true
          filename: services/reis/coverage.xml
          format: markdown
          output: both
      - run: cp code-coverage-results.md $GITHUB_STEP_SUMMARY
        working-directory: .
