name: E2E Tests

on:
  workflow_call:
    inputs:
      browser:
        required: true
        type: string
      testdir:
        required: true
        type: string
    secrets:
      AZURE_OPENAI_API_KEY:
        required: true
      STORE_AZURE_AI_SEARCH_SERVICE_API_KEY:
        required: true

defaults:
  run:
    working-directory: e2e

jobs:
  run-e2e:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    services:
      pgvector:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: cccc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      backend:
        image: ghcr.io/${{ github.repository }}/backend:commit-${{ github.sha }}
        env:
          BASE_URL: http://localhost:3080
          DB_URL: postgres://admin:secret@pgvector:5432/cccc
          C4_DB_RETRY_DELAY: 6000
          NODE_ENV: development
          AUTH_ENABLE_PASSWORD: true
          AUTH_INITIAL_ADMIN_USERNAME: admin@example.com
          AUTH_INITIAL_ADMIN_PASSWORD: secret
      frontend:
        image: ghcr.io/${{ github.repository }}/frontend:commit-${{ github.sha }}
      caddy-gateway-proxy:
        image: ghcr.io/${{ github.repository }}/dev-helper/caddy-gateway-proxy:latest
        ports:
          - 3080:3080
      reis:
        image: ghcr.io/${{ github.repository }}/reis:commit-${{ github.sha }}
        options: >-
          --health-interval 10s
          --health-timeout 5s
          --health-retries 20
        env:
          WORKERS: 2
          BATCH_SIZE: 100
          STORE_TYPE: pgvector
          STORE_PGVECTOR_URL: postgresql+psycopg://admin:secret@pgvector:5432/cccc
          STORE_AZURE_AI_SEARCH_SERVICE_ENDPOINT: ${{ vars.STORE_AZURE_AI_SEARCH_SERVICE_ENDPOINT }}
          STORE_AZURE_AI_SEARCH_SERVICE_API_KEY: ${{ secrets.STORE_AZURE_AI_SEARCH_SERVICE_API_KEY }}
          STORE_AZURE_AI_SEARCH_SERVICE_INDEX_NAME: basis-reis-test
          EMBEDDINGS_TYPE: azure-openai
          EMBEDDINGS_AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          EMBEDDINGS_AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          EMBEDDINGS_AZURE_OPENAI_DEPLOYMENT_NAME: text-embedding-ada-002
          EMBEDDINGS_AZURE_OPENAI_INSTANCE_NAME: cc-sweden-testing
          EMBEDDINGS_AZURE_OPENAI_MODEL_NAME: text-embedding-ada-002
          EMBEDDINGS_AZURE_OPENAI_API_VERSION: "2023-05-15"
      mcp-fetch:
        image: ghcr.io/${{ github.repository }}/dev-helper/mcp-tool-as-server:latest
        env:
          CONFIG: >
            {
              "mcpServers": {
                "mcp-fetch": {
                  "command": "uvx",
                  "args": [
                    "mcp-server-fetch"
                  ],
                  "port": 8000
                }
              }
            }
        ports:
          - "8000:8000"
    env:
      AZURE_OPEN_AI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      TEST_DIR: ./${{ inputs.testdir }}
      URL: http://localhost:3080
      REIS_ENDPOINT: http://reis:3201
      MCP_SERVER_ENDPOINT: http://mcp-fetch:8000/sse
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: 'npm'
          cache-dependency-path: e2e/package-lock.json
      - run: npm ci
      - run: npx playwright install ${{ inputs.browser }} --with-deps
      - run: npx playwright test --project=${{ inputs.browser }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: e2e-report-${{ inputs.browser }}-${{ inputs.testdir }}
          path: |
            e2e/test-results/
            e2e/playwright-report/
          retention-days: 2
