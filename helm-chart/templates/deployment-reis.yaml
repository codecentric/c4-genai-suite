{{- if .Values.reis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "c4genaisuite.fullname" . }}-rei-s
  labels:
    {{- include "c4genaisuite.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: reis
    {{- if .Values.reis.labels }}
    {{- toYaml .Values.reis.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.reis.annotations }}
  annotations:
    {{- toYaml .Values.reis.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.reis.replicaCount }}
  strategy:
    {{ toYaml .Values.reis.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "c4genaisuite.commonSelectors" . | nindent 6 }}
      app.kubernetes.io/component: reis
  template:
    metadata:
      labels:
        {{- include "c4genaisuite.commonLabels" . | nindent 8 }}
        app.kubernetes.io/component: reis
        {{- if .Values.reis.podLabels }}
        {{- toYaml .Values.reis.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-reis.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret-reis.yaml") . | sha256sum }}
        {{- if .Values.reis.podAnnotations }}
        {{- toYaml .Values.reis.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      securityContext: {{ .Values.reis.podSecurityContext | toYaml | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-reis
          image: "{{ .Values.reis.image.repository }}:{{ .Values.reis.image.tag | default .Chart.AppVersion }}"
          securityContext: {{ .Values.reis.containerSecurityContext | toYaml | nindent 12 }}
          ports:
            - containerPort: 3201
              name: web
              protocol: TCP
            - containerPort: {{ .Values.reis.metrics.port }}
              name: metrics
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: 3201
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /health
              port: 3201
          readinessProbe:
            httpGet:
              path: /health
              port: 3201
            initialDelaySeconds: 20
            periodSeconds: 5
          resources: {{ .Values.reis.resources | toYaml | nindent 12 }}
          env:
            {{- if .Values.reis.embeddings.azureOpenAi.existingApiKeySecret }}
            - name: EMBEDDINGS_AZURE_OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reis.embeddings.azureOpenAi.existingApiKeySecret }}
                  key: azureOpenAiApiKey
            {{- end }}
            {{- if .Values.reis.embeddings.openAi.existingApiKeySecret }}
            - name: EMBEDDINGS_OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reis.embeddings.openAi.existingApiKeySecret }}
                  key: openAiApiKey
            {{- end }}
            {{- if .Values.reis.speechToText.azureOpenAiWhisper.existingApiKeySecret }}
            - name: STT_AZURE_OPENAI_WHISPER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reis.speechToText.azureOpenAiWhisper.existingApiKeySecret }}
                  key: azureOpenAiWhisperApiKey
            {{- end }}
            {{- if .Values.reis.vectorDatabase.azureAiSearch.existingApiKeySecret }}
            - name: STORE_AZURE_AI_SEARCH_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reis.vectorDatabase.azureAiSearch.existingApiKeySecret }}
                  key: azureAiSearchApiKey
            {{- end }}
            {{- if and (eq .Values.reis.vectorDatabase.type "pgvector") .Values.reis.vectorDatabase.pgVector.existingConnectionStringSecret }}
            - name: STORE_PGVECTOR_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reis.vectorDatabase.pgVector.existingConnectionStringSecret }}
                  key: connectionString
            {{- end }}
            {{- with .Values.reis.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "c4genaisuite.fullname" . }}-reis-config
            - secretRef:
                name: {{ include "c4genaisuite.fullname" . }}-reis-secret
          volumeMounts:
          {{- with .Values.reis.extraVolumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- with .Values.reis.extraVolumes }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
