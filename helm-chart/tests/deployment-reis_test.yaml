# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json

suite: Deployment REI-S
templates:
  - configmap-reis.yaml # required because it is included in deployment-reis.yaml
  - deployment-reis.yaml
  - secret-reis.yaml # required because it is included in deployment-reis.yaml
set:
  reis.enabled: true
  reis.embeddings.type: openai
  reis.vectorDatabase.type: pgvector
tests:
  - it: is of kind Deployment
    template: deployment-reis.yaml
    asserts:
      - isKind:
          of: Deployment

  - it: uses default name pattern when no overrides are specified
    template: deployment-reis.yaml
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-c4-genai-suite-rei-s

  - it: name should use fullnameOverride when provided
    template: deployment-reis.yaml
    set:
      fullnameOverride: my-custom-fullname
    asserts:
      - equal:
          path: metadata.name
          value: my-custom-fullname-rei-s

  - it: should incorporate nameOverride when provided
    template: deployment-reis.yaml
    set:
      nameOverride: my-custom-name
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-my-custom-name-rei-s

  - it: should base image tag on the Chart version when not explicitly overridden
    template: deployment-reis.yaml
    chart:
      version: 44.71.3
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "ghcr.io/codecentric/c4-genai-suite/reis:v44.71.3"

  - it: should use custom image tag when explicitly overridden
    template: deployment-reis.yaml
    set:
      reis.image.tag: "v1.2.3"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "ghcr.io/codecentric/c4-genai-suite/reis:v1.2.3"

  - it: has update strategy Rolling Update by default
    template: deployment-reis.yaml
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate

  - it: supports custom update strategies
    template: deployment-reis.yaml
    set:
      reis.updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 42%
          maxUnavailable: 63%
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 42%
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 63%

  - it: sets custom deployment labels if provided
    template: deployment-reis.yaml
    set:
      reis.labels:
        one: hello
        two: there
    asserts:
      - equal:
          path: metadata.labels.one
          value: hello
      - equal:
          path: metadata.labels.two
          value: there

  - it: sets custom pod labels if provided
    template: deployment-reis.yaml
    set:
      reis.podLabels:
        ding: bing
        dong: bong
    asserts:
      - equal:
          path: spec.template.metadata.labels.ding
          value: bing
      - equal:
          path: spec.template.metadata.labels.dong
          value: bong

  - it: sets custom deployment annotations
    template: deployment-reis.yaml
    set:
      reis.annotations:
        piff: paff
        smack: whack
    asserts:
      - equal:
          path: metadata.annotations.piff
          value: paff
      - equal:
          path: metadata.annotations.smack
          value: whack

  - it: sets custom pod annotations if provided
    template: deployment-reis.yaml
    set:
      reis.podAnnotations:
        beep: boop
        zeep: zoop
    asserts:
      - equal:
          path: spec.template.metadata.annotations.beep
          value: boop
      - equal:
          path: spec.template.metadata.annotations.zeep
          value: zoop

  - it: mounts Azure OpenAI API Key secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.embeddings.type: azure-openai
      reis.embeddings.azureOpenAi.existingApiKeySecret: my-azure-openai-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: EMBEDDINGS_AZURE_OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: my-azure-openai-secret
                key: azureOpenAiApiKey
          count: 1
          any: true

  - it: mounts OpenAI API Key secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.embeddings.type: openai
      reis.embeddings.openAi.existingApiKeySecret: my-openai-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: EMBEDDINGS_OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: my-openai-secret
                key: openAiApiKey
          count: 1
          any: true

  - it: mounts Bedrock API Key secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.embeddings.type: bedrock
      reis.embeddings.bedrock.existingApiKeySecret: my-bedrock-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: EMBEDDINGS_BEDROCK_AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: my-bedrock-secret
                key: bedrockApiKey
          count: 1
          any: true

  - it: mounts NVIDIA API Key secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.embeddings.type: nvidia
      reis.embeddings.nvidia.existingApiKeySecret: my-nvidia-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: EMBEDDINGS_NVIDIA_API_KEY
            valueFrom:
              secretKeyRef:
                name: my-nvidia-secret
                key: nvidiaApiKey
          count: 1
          any: true

  - it: mounts Azure OpenAI Whisper API Key secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.speechToText.type: openai
      reis.speechToText.azureOpenAiWhisper.existingApiKeySecret: my-openai-whisper-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: STT_AZURE_OPENAI_WHISPER_API_KEY
            valueFrom:
              secretKeyRef:
                name: my-openai-whisper-secret
                key: azureOpenAiWhisperApiKey
          count: 1
          any: true

  - it: mounts Azure AI Search API Key secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.vectorDatabase.type: azure-ai-search
      reis.vectorDatabase.azureAiSearch.existingApiKeySecret: my-azure-ai-search-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: STORE_AZURE_AI_SEARCH_SERVICE_API_KEY
            valueFrom:
              secretKeyRef:
                name: my-azure-ai-search-secret
                key: azureAiSearchApiKey
          count: 1
          any: true

  - it: mounts the PGVector connection string secret as environment variable in the container
    template: deployment-reis.yaml
    set:
      reis.vectorDatabase.type: pgvector
      reis.vectorDatabase.pgVector.existingConnectionStringSecret: my-postgresql-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: STORE_PGVECTOR_URL
            valueFrom:
              secretKeyRef:
                name: my-postgresql-secret
                key: connectionString
          count: 1
          any: true

  - it: defines a named port called `web` for container port 3201
    template: deployment-reis.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 3201
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: web

  - it: has consistent container port configuration
    template: deployment-reis.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 3201
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.port
          value: 3201
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 3201
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: 3201

  - it: has extra environment variables set
    template: deployment-reis.yaml
    set:
      reis.extraEnvVars:
        - name: HELLO_TEST
          value: hello-world
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HELLO_TEST
            value: hello-world

  - it: has extra volumes and volumeMounts set
    template: deployment-reis.yaml
    set:
      reis.extraVolumeMounts:
        - name: test
          mountPath: /tmp
      reis.extraVolumes:
        - name: test
          emptyDir: {}
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: test
            mountPath: /tmp
      - contains:
          path: spec.template.spec.volumes
          content:
            name: test
            emptyDir: {}
