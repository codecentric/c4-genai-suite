# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json

suite: Secret REI-S
templates:
  - secret-reis.yaml
set:
  reis.enabled: true
tests:
  - it: is of kind Secret
    asserts:
      - isKind:
          of: Secret

  - it: uses default name pattern when no overrides are specified
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-c4-genai-suite-reis-secret

  - it: name should use fullnameOverride when provided
    set:
      fullnameOverride: my-custom-fullname
    asserts:
      - equal:
          path: metadata.name
          value: my-custom-fullname-reis-secret

  - it: should incorporate nameOverride when provided
    set:
      nameOverride: my-custom-name
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-my-custom-name-reis-secret

  - it: contains the PGVector connection string if set
    set:
      reis.vectorDatabase.type: pgvector
      reis.vectorDatabase.pgVector.connectionString: postgres://user:password@host:port/dbname
    asserts:
      - equal:
          path: stringData.STORE_PGVECTOR_URL
          value: postgres://user:password@host:port/dbname

  - it: does not contain the PGVector connection string if an existing secret is set
    set:
      reis.vectorDatabase.type: pgvector
      reis.vectorDatabase.pgVector.connectionString: postgres://user:password@host:port/dbname
      reis.vectorDatabase.pgVector.existingConnectionStringSecret: my-postgresql-secret
    asserts:
      - notExists:
          path: stringData.STORE_PGVECTOR_URL

  - it: contains Azure OpenAI API Key secret if set
    set:
      reis.embeddings.type: azure-openai
      reis.embeddings.azureOpenAi.apiKey: my-api-key
    asserts:
      - equal:
          path: stringData.EMBEDDINGS_AZURE_OPENAI_API_KEY
          value: my-api-key

  - it: contains OpenAI API Key secret if set
    set:
      reis.embeddings.type: openai
      reis.embeddings.openAi.apiKey: my-api-key
    asserts:
      - equal:
          path: stringData.EMBEDDINGS_OPENAI_API_KEY
          value: my-api-key

  - it: contains Bedrock API Key secret if set
    set:
      reis.embeddings.type: bedrock
      reis.embeddings.bedrock.accessKeyId: my-access-key-id
      reis.embeddings.bedrock.secretAccessKey: my-secret-key
    asserts:
      - equal:
          path: stringData.EMBEDDINGS_BEDROCK_AWS_ACCESS_KEY_ID
          value: my-access-key-id
      - equal:
          path: stringData.EMBEDDINGS_BEDROCK_AWS_SECRET_ACCESS_KEY
          value: my-secret-key

  - it: contains NVIDIA API Key secret if set
    set:
      reis.embeddings.type: nvidia
      reis.embeddings.nvidia.apiKey: my-api-key
    asserts:
      - equal:
          path: stringData.EMBEDDINGS_NVIDIA_API_KEY
          value: my-api-key

  - it: contains s3 access Key secret if set
    set:
      reis.fileStore.type: s3
      reis.fileStore.s3.accessKeyId: my-s3-access-key-id
      reis.fileStore.s3.secretAccessKey: my-s3-secret-key
    asserts:
      - equal:
          path: stringData.FILE_STORE_S3_ACCESS_KEY_ID
          value: my-s3-access-key-id
      - equal:
          path: stringData.FILE_STORE_S3_SECRET_ACCESS_KEY
          value: my-s3-secret-key
