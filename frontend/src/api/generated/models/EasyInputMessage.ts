//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EasyInputMessageContent } from './EasyInputMessageContent';
import {
    EasyInputMessageContentFromJSON,
    EasyInputMessageContentFromJSONTyped,
    EasyInputMessageContentToJSON,
} from './EasyInputMessageContent';

/**
 * 
 * @export
 * @interface EasyInputMessage
 */
export interface EasyInputMessage {
    /**
     * 
     * @type {EasyInputMessageContent}
     * @memberof EasyInputMessage
     */
    content: EasyInputMessageContent;
    /**
     * 
     * @type {string}
     * @memberof EasyInputMessage
     */
    role: EasyInputMessageRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof EasyInputMessage
     */
    type?: EasyInputMessageTypeEnum;
}


/**
 * @export
 */
export const EasyInputMessageRoleEnum = {
    User: 'user',
    Assistant: 'assistant',
    System: 'system',
    Developer: 'developer'
} as const;
export type EasyInputMessageRoleEnum = typeof EasyInputMessageRoleEnum[keyof typeof EasyInputMessageRoleEnum];

/**
 * @export
 */
export const EasyInputMessageTypeEnum = {
    Message: 'message'
} as const;
export type EasyInputMessageTypeEnum = typeof EasyInputMessageTypeEnum[keyof typeof EasyInputMessageTypeEnum];


/**
 * Check if a given object implements the EasyInputMessage interface.
 */
export function instanceOfEasyInputMessage(value: object): value is EasyInputMessage {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function EasyInputMessageFromJSON(json: any): EasyInputMessage {
    return EasyInputMessageFromJSONTyped(json, false);
}

export function EasyInputMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): EasyInputMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'content': EasyInputMessageContentFromJSON(json['content']),
        'role': json['role'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function EasyInputMessageToJSON(value?: EasyInputMessage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': EasyInputMessageContentToJSON(value['content']),
        'role': value['role'],
        'type': value['type'],
    };
}

