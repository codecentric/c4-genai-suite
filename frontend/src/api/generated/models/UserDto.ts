//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     * The user ID from the auth provider.
     * @type {string}
     * @memberof UserDto
     */
    id: string;
    /**
     * The display name.
     * @type {string}
     * @memberof UserDto
     */
    name: string;
    /**
     * The email address.
     * @type {string}
     * @memberof UserDto
     */
    email: string;
    /**
     *  The URL to an external picture.
     * @type {string}
     * @memberof UserDto
     */
    picture?: string;
    /**
     * The API Key.
     * @type {string}
     * @memberof UserDto
     */
    apiKey?: string;
    /**
     * The user group IDs.
     * @type {Array<string>}
     * @memberof UserDto
     */
    userGroupIds: Array<string>;
    /**
     * Indicates if the user has a password configured.
     * @type {boolean}
     * @memberof UserDto
     */
    hasPassword: boolean;
    /**
     * Indicates if the user has an api key configured.
     * @type {boolean}
     * @memberof UserDto
     */
    hasApiKey: boolean;
}

/**
 * Check if a given object implements the UserDto interface.
 */
export function instanceOfUserDto(value: object): value is UserDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('userGroupIds' in value) || value['userGroupIds'] === undefined) return false;
    if (!('hasPassword' in value) || value['hasPassword'] === undefined) return false;
    if (!('hasApiKey' in value) || value['hasApiKey'] === undefined) return false;
    return true;
}

export function UserDtoFromJSON(json: any): UserDto {
    return UserDtoFromJSONTyped(json, false);
}

export function UserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'email': json['email'],
        'picture': json['picture'] == null ? undefined : json['picture'],
        'apiKey': json['apiKey'] == null ? undefined : json['apiKey'],
        'userGroupIds': json['userGroupIds'],
        'hasPassword': json['hasPassword'],
        'hasApiKey': json['hasApiKey'],
    };
}

export function UserDtoToJSON(value?: UserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'email': value['email'],
        'picture': value['picture'],
        'apiKey': value['apiKey'],
        'userGroupIds': value['userGroupIds'],
        'hasPassword': value['hasPassword'],
        'hasApiKey': value['hasApiKey'],
    };
}

