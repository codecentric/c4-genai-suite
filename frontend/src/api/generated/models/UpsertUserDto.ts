//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpsertUserDto
 */
export interface UpsertUserDto {
    /**
     * The display name.
     * @type {string}
     * @memberof UpsertUserDto
     */
    name: string;
    /**
     * The email address.
     * @type {string}
     * @memberof UpsertUserDto
     */
    email: string;
    /**
     * The optional password.
     * @type {string}
     * @memberof UpsertUserDto
     */
    password?: string;
    /**
     * The user group IDs.
     * @type {Array<string>}
     * @memberof UpsertUserDto
     */
    userGroupIds: Array<string>;
    /**
     * The API Key.
     * @type {string}
     * @memberof UpsertUserDto
     */
    apiKey?: string | null;
}

/**
 * Check if a given object implements the UpsertUserDto interface.
 */
export function instanceOfUpsertUserDto(value: object): value is UpsertUserDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('userGroupIds' in value) || value['userGroupIds'] === undefined) return false;
    return true;
}

export function UpsertUserDtoFromJSON(json: any): UpsertUserDto {
    return UpsertUserDtoFromJSONTyped(json, false);
}

export function UpsertUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsertUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'password': json['password'] == null ? undefined : json['password'],
        'userGroupIds': json['userGroupIds'],
        'apiKey': json['apiKey'] == null ? undefined : json['apiKey'],
    };
}

export function UpsertUserDtoToJSON(value?: UpsertUserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'email': value['email'],
        'password': value['password'],
        'userGroupIds': value['userGroupIds'],
        'apiKey': value['apiKey'],
    };
}

