//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExtensionArgumentObjectSpecDto } from './ExtensionArgumentObjectSpecDto';
import {
    ExtensionArgumentObjectSpecDtoFromJSON,
    ExtensionArgumentObjectSpecDtoFromJSONTyped,
    ExtensionArgumentObjectSpecDtoToJSON,
} from './ExtensionArgumentObjectSpecDto';

/**
 * 
 * @export
 * @interface StreamUIRequestDto
 */
export interface StreamUIRequestDto {
    /**
     * The ID to confirm the request.
     * @type {string}
     * @memberof StreamUIRequestDto
     */
    id: string;
    /**
     * The text for the confirm dialog.
     * @type {string}
     * @memberof StreamUIRequestDto
     */
    text: string;
    /**
     * The schema.
     * @type {ExtensionArgumentObjectSpecDto}
     * @memberof StreamUIRequestDto
     */
    schema: ExtensionArgumentObjectSpecDto;
}

/**
 * Check if a given object implements the StreamUIRequestDto interface.
 */
export function instanceOfStreamUIRequestDto(value: object): value is StreamUIRequestDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('schema' in value) || value['schema'] === undefined) return false;
    return true;
}

export function StreamUIRequestDtoFromJSON(json: any): StreamUIRequestDto {
    return StreamUIRequestDtoFromJSONTyped(json, false);
}

export function StreamUIRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamUIRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'text': json['text'],
        'schema': ExtensionArgumentObjectSpecDtoFromJSON(json['schema']),
    };
}

export function StreamUIRequestDtoToJSON(value?: StreamUIRequestDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'text': value['text'],
        'schema': ExtensionArgumentObjectSpecDtoToJSON(value['schema']),
    };
}

