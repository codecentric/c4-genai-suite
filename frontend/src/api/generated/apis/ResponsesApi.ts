//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiResponsesControllerCreateResponse200Response,
  ApiResponsesControllerCreateResponse503Response,
  ResponseCreateDto,
} from '../models/index';
import {
    ApiResponsesControllerCreateResponse200ResponseFromJSON,
    ApiResponsesControllerCreateResponse200ResponseToJSON,
    ApiResponsesControllerCreateResponse503ResponseFromJSON,
    ApiResponsesControllerCreateResponse503ResponseToJSON,
    ResponseCreateDtoFromJSON,
    ResponseCreateDtoToJSON,
} from '../models/index';

export interface ApiResponsesControllerCreateResponseRequest {
    assistantId: number;
    responseCreateDto: ResponseCreateDto;
}

export interface ApiResponsesControllerUploadFileRequest {
    assistantId: number;
}

/**
 * 
 */
export class ResponsesApi extends runtime.BaseAPI {

    /**
     */
    async apiResponsesControllerCreateResponseRaw(requestParameters: ApiResponsesControllerCreateResponseRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiResponsesControllerCreateResponse200Response>> {
        if (requestParameters['assistantId'] == null) {
            throw new runtime.RequiredError(
                'assistantId',
                'Required parameter "assistantId" was null or undefined when calling apiResponsesControllerCreateResponse().'
            );
        }

        if (requestParameters['responseCreateDto'] == null) {
            throw new runtime.RequiredError(
                'responseCreateDto',
                'Required parameter "responseCreateDto" was null or undefined when calling apiResponsesControllerCreateResponse().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/assistants/{assistantId}/responses`.replace(`{${"assistantId"}}`, encodeURIComponent(String(requestParameters['assistantId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ResponseCreateDtoToJSON(requestParameters['responseCreateDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiResponsesControllerCreateResponse200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiResponsesControllerCreateResponse(assistantId: number, responseCreateDto: ResponseCreateDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiResponsesControllerCreateResponse200Response> {
        const response = await this.apiResponsesControllerCreateResponseRaw({ assistantId: assistantId, responseCreateDto: responseCreateDto }, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiResponsesControllerUploadFileRaw(requestParameters: ApiResponsesControllerUploadFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['assistantId'] == null) {
            throw new runtime.RequiredError(
                'assistantId',
                'Required parameter "assistantId" was null or undefined when calling apiResponsesControllerUploadFile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/assistants/{assistantId}/files`.replace(`{${"assistantId"}}`, encodeURIComponent(String(requestParameters['assistantId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiResponsesControllerUploadFile(assistantId: number, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiResponsesControllerUploadFileRaw({ assistantId: assistantId }, initOverrides);
    }

}
